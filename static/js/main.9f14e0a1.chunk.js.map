{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","Redux/contacts/contacts-types.js","components/ContactForm/ContactForm.js","Redux/contacts/contacts-actions.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","Redux/contacts/contacts-reducers.js","Redux/store.js","index.js","components/ContactList/ContactList.module.css","App.module.css"],"names":["module","exports","ADD","DELETE","CHANGE_FILTER","connect","dispatch","onSubmit","name","number","type","payload","id","uuidv4","ContactsActions","useState","setName","setNumber","handleChange","e","currentTarget","value","resetForm","className","s","form","preventDefault","label","input","pattern","title","onChange","required","submitButton","state","contacts","visibleContacts","items","filter","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","onDelete","length","contactList","map","contactItem","contactInfo","deleteButton","onClick","notification","event","Phonebook","app","combineReducers","defaultContacts","namesArray","item","alert","rootReducer","contactsReducers","store","createStore","composeWithDevTools","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f14e0a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3O0AP\",\"label\":\"Filter_label__2sYpB\",\"input\":\"Filter_input__m7rEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2ksRw\",\"label\":\"ContactForm_label__1lEip\",\"input\":\"ContactForm_input__1vEV_\",\"submitButton\":\"ContactForm_submitButton__Ob2wD\"};","const ADD = 'contacts/Add';\r\nconst DELETE = 'contacts/Delete';\r\nconst CHANGE_FILTER = 'contacts/changeFilter';\r\n\r\nexport { ADD, DELETE, CHANGE_FILTER };\r\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as ContactsActions from '../../Redux/contacts/contacts-actions';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // запись имени и номера телефона в стейт\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // добавление контакта в список контактов и сброс инпутов\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    resetForm();\n  };\n\n  // сброс стейта\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <button className={s.submitButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(ContactsActions.addContact(name, number)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(ContactForm);\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  ADD,\r\n  DELETE,\r\n  CHANGE_FILTER,\r\n} from './contacts-types';\r\n\r\nconst addContact = (name, number) => ({\r\n  type: ADD,\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n  type: DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n  type: CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport { addContact, deleteContact, changeFilter };\r\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as ContactsActions from '../../Redux/contacts/contacts-actions';\n\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDelete }) {\n  return (\n    <>\n      {contacts.length !== 0 ? (\n        <ul className={s.contactList}>\n          {contacts.map(({ id, name, number }) => (\n            <li className={s.contactItem} key={id}>\n              <p className={s.contactInfo}>\n                {name}: {number}\n              </p>\n              <button\n                className={s.deleteButton}\n                id={id}\n                onClick={() => onDelete(id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={s.notification}>\n          There are no contacts yet...\n        </p>\n      )}\n    </>\n  );\n}\n\nconst getVisibleContacts = (items, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n\n  const visibleContacts = getVisibleContacts(items, filter);\n  return { contacts: visibleContacts };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id =>\n    dispatch(ContactsActions.deleteContact(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as ContactsActions from '../../Redux/contacts/contacts-actions';\n\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event =>\n    dispatch(\n      ContactsActions.changeFilter(\n        event.currentTarget.value,\n      ),\n    ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import s from './App.module.css';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default function Phonebook() {\n  // const [contacts, setContacts] = useState(() => {\n  //   return (\n  //     JSON.parse(window.localStorage.getItem('contacts')) ??\n  //     defaultContacts\n  //   );\n  // });\n  // const [filter, setFilter] = useState('');\n\n  // useEffect(() => {\n  //   window.localStorage.setItem(\n  //     'contacts',\n  //     JSON.stringify(contacts),\n  //   );\n  // }, [contacts]);\n\n  // добавление контактов с проверкой на уникальность\n  // const addContact = ({ name, number }) => {\n  //   const newContact = {\n  //     id: uuidv4(),\n  //     name,\n  //     number,\n  //   };\n\n  //   if (contacts.some(contact => contact.name === name)) {\n  //     alert(`${name} is already exist`);\n  //   } else {\n  //     setContacts([newContact, ...contacts]);\n  //   }\n  // };\n\n  // удаление одного контакта по клику на кнопку \"Delete\"\n  // const removeContact = contactId => {\n  //   setContacts(contacts =>\n  //     contacts.filter(contact => contact.id !== contactId),\n  //   );\n  // };\n\n  // запись значения поля фильтра в стейт\n  // const changeFilter = e => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  // получение списка контактов по значению из фильтра\n  // const getVisibleContacts = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n  // };\n\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport {\r\n  ADD,\r\n  DELETE,\r\n  CHANGE_FILTER,\r\n} from './contacts-types';\r\nimport defaultContacts from '../../contacts.json';\r\n\r\nconst items = (\r\n  state = defaultContacts,\r\n  { type, payload },\r\n) => {\r\n  switch (type) {\r\n    case ADD: {\r\n      let namesArray = state.map(item => item.name);\r\n      if (!namesArray.includes(payload.name)) {\r\n        return [payload, ...state];\r\n      } else {\r\n        alert(`${payload.name} is already exist`);\r\n        return state;\r\n      }\r\n    }\r\n    // case ADD:\r\n    //   return [payload, ...state];\r\n\r\n    case DELETE:\r\n      return state.filter(\r\n        contact => contact.id !== payload,\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_FILTER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducers from './contacts/contacts-reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducers,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './Redux/store';\n\nconsole.log(store.getState());\n// console.log(store.dispatch(addContact));\n// store.dispatch(addContact(2));\n// store.dispatch(deleteContact(8));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3BZX4\",\"contactItem\":\"ContactList_contactItem__3i0UU\",\"contactInfo\":\"ContactList_contactInfo__13nWf\",\"deleteButton\":\"ContactList_deleteButton__14vBR\",\"notification\":\"ContactList_notification__16gl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2FXkr\",\"title\":\"App_title__1tiiA\"};"],"sourceRoot":""}