{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-reducers.js","redux/store.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-actions.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css","App.module.css"],"names":["module","exports","ADD","DELETE","CHANGE_FILTER","combineReducers","items","state","defaultContacts","type","payload","namesArray","map","item","name","includes","alert","filter","contact","id","rootReducer","contacts","contactsReducers","store","createStore","composeWithDevTools","connect","dispatch","onSubmit","number","uuidv4","ContactsActions","useState","setName","setNumber","handleChange","e","currentTarget","value","resetForm","className","s","form","preventDefault","label","input","pattern","title","onChange","required","submitButton","visibleContacts","normalizedFilter","toLowerCase","getVisibleContacts","onDelete","length","contactList","contactItem","contactInfo","deleteButton","onClick","notification","evt","Phonebook","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b110877d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3O0AP\",\"label\":\"Filter_label__2sYpB\",\"input\":\"Filter_input__m7rEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2ksRw\",\"label\":\"ContactForm_label__1lEip\",\"input\":\"ContactForm_input__1vEV_\",\"submitButton\":\"ContactForm_submitButton__Ob2wD\"};","export const ADD = \"contacts/Add\";\r\n\r\nexport const DELETE = \"contacts/Delete\";\r\n\r\nexport const CHANGE_FILTER = \"contacts/changeFilter\";\r\n\r\n// export { ADD, DELETE, CHANGE_FILTER };\r\n","import { combineReducers } from \"redux\";\r\nimport { ADD, DELETE, CHANGE_FILTER } from \"./contacts-types\";\r\nimport defaultContacts from \"../../contacts.json\";\r\n\r\nconst items = (state = defaultContacts, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD: {\r\n      let namesArray = state.map((item) => item.name);\r\n      if (!namesArray.includes(payload.name)) {\r\n        return [payload, ...state];\r\n      } else {\r\n        alert(`${payload.name} is already exist`);\r\n        return state;\r\n      }\r\n    }\r\n    // case ADD:\r\n    //   return [payload, ...state];\r\n\r\n    case DELETE:\r\n      return state.filter((contact) => contact.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_FILTER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactsReducers from \"./contacts/contacts-reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducers,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as ContactsActions from \"../../redux/contacts/contacts-actions\";\n\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  // запись имени и номера телефона в стейт\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // добавление контакта в список контактов и сброс инпутов\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    resetForm();\n  };\n\n  // сброс стейта\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <button className={s.submitButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) =>\n    dispatch(ContactsActions.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { ADD, DELETE, CHANGE_FILTER } from \"./contacts-types\";\r\n\r\nconst addContact = (name, number) => ({\r\n  type: ADD,\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst deleteContact = (contactId) => ({\r\n  type: DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = (value) => ({\r\n  type: CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport { addContact, deleteContact, changeFilter };\r\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as ContactsActions from '../../redux/contacts/contacts-actions';\n\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDelete }) {\n  return (\n    <>\n      {contacts.length !== 0 ? (\n        <ul className={s.contactList}>\n          {contacts.map(({ id, name, number }) => (\n            <li className={s.contactItem} key={id}>\n              <p className={s.contactInfo}>\n                {name}: {number}\n              </p>\n              <button\n                className={s.deleteButton}\n                id={id}\n                onClick={() => onDelete(id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={s.notification}>\n          There are no contacts yet...\n        </p>\n      )}\n    </>\n  );\n}\n\nconst getVisibleContacts = (items, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n\n  const visibleContacts = getVisibleContacts(items, filter);\n  return { contacts: visibleContacts };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id =>\n    dispatch(ContactsActions.deleteContact(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as ContactsActions from \"../../redux/contacts/contacts-actions\";\n\nimport s from \"./Filter.module.css\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (evt) =>\n    dispatch(ContactsActions.changeFilter(evt.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import s from \"./App.module.css\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nexport default function Phonebook() {\n  // const [contacts, setContacts] = useState(() => {\n  //   return (\n  //     JSON.parse(window.localStorage.getItem('contacts')) ??\n  //     defaultContacts\n  //   );\n  // });\n  // const [filter, setFilter] = useState('');\n\n  // useEffect(() => {\n  //   window.localStorage.setItem(\n  //     'contacts',\n  //     JSON.stringify(contacts),\n  //   );\n  // }, [contacts]);\n\n  // добавление контактов с проверкой на уникальность\n  // const addContact = ({ name, number }) => {\n  //   const newContact = {\n  //     id: uuidv4(),\n  //     name,\n  //     number,\n  //   };\n\n  //   if (contacts.some(contact => contact.name === name)) {\n  //     alert(`${name} is already exist`);\n  //   } else {\n  //     setContacts([newContact, ...contacts]);\n  //   }\n  // };\n\n  // удаление одного контакта по клику на кнопку \"Delete\"\n  // const removeContact = contactId => {\n  //   setContacts(contacts =>\n  //     contacts.filter(contact => contact.id !== contactId),\n  //   );\n  // };\n\n  // запись значения поля фильтра в стейт\n  // const changeFilter = e => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  // получение списка контактов по значению из фильтра\n  // const getVisibleContacts = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n  // };\n\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3BZX4\",\"contactItem\":\"ContactList_contactItem__3i0UU\",\"contactInfo\":\"ContactList_contactInfo__13nWf\",\"deleteButton\":\"ContactList_deleteButton__14vBR\",\"notification\":\"ContactList_notification__16gl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2FXkr\",\"title\":\"App_title__1tiiA\"};"],"sourceRoot":""}